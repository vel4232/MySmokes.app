/*
 Программа тестировалась на iPhone 12 pro MAX. Использовались констрейнты, но не отлаживалась на других экранах. Тестировать на табаке Dark Side, так как json прописывался тольтко ля него на всем этапе работы программы.
 
 Программа MySmokes состоит из трех частей: Главная, Профиль, Корзина. Также в программе реализовано загрузочное окно, которое на данный момент до тестирования занимаемой оперативной памяти, создано лишь в целях дизайна. Остальные вспомогательные файлы отображены под наименованием Загрузка и CoreData.
Части программы определяются вкладками на TabBar. В части Главная реализованы загрузки и отображения 3 уровней кодирования файла json: табак - линейка - вкус.
 Главная:
 Первый уровень представлен табаками, углями и прочей продукции. Причем в json отработа только Darkside - смотреть его! Этой segmented control работает на изменении ссылки загрузки из внешнего источника информации - парсинга. Все 3 уровня и программа адаптированы на одно и то же отображение всех элементов данного segmented control. Первый уровень в себя также включает возможность поиска по наименованию табака и возможностью проставлять лайки (дальнейшая связь с сервером и интеграция в профиль будет разработана в следующей версии). В первом уровне происходит загрузка всех данных, данные которой передаются на всю программу.
 Второй уровень раскрывает далее массим данных, который был выгружен на первом уровне. В нем реализован эффект параллакса, который будет скорректирован вдальнейшем путем корректного отображения увеличения картинки и ее уменьшения при скроллинге вверх. Таке путем изменения заполнения tableview реализованы секции подробностей и вкусов, отраженных в фигме. Некоторые ячейки неактивны к выбору, некоторые активны и передают свои значения при переходе к третьему уровню.
 В третьем уровне раскрывается следующий уровень массива данных в целях отражения данных о самом конкретном вкусе и раскрывается последний четвертый уровень о возможных граммовках готовой продукции и их цен. Здесь можно просмотреть отзывы, изменить рейтинг табака, который в следующей версии будет корректировать сами данные на сервере, а также проскроллить с помощью collection view граммовки упаковок, выбрать и положить в корзину. Здесь реализуем modal переход на выбор рейтинга данного вкуса.
 Профиль:
 Главная страница профиля представлена данными, которые с VC1 вызываются и записываются в CoreData1 с помощью Standart Loader. Также реализованы без возможностью клика и скроллинга ячеек - table view cell. Реализованы все ячейки профиля, за исключением лояльности и поддержки, где данные должны передаваться на сам сервер.
 Корзина:
 В случае отсутствия в корзине товара, будет отображен ImageView, в противном случа - он скроется. С помощью budge реализован индикатор количества товаром в корзине. Произведен расчет показателей стоимости и возможность изменения количества товара, который возвращается в CoreData2 и возвращается с расчетами на даннаый контроллер.
 Оформление заказа представлено по аналогии с фигмой и после подтверждения заказа обнуляется кордата баджа и товара и идет возвращение на первый контроллер корзины.
 Загрузка и КорДата
 В загрузке реализован парсинг товара и профиля. Кордата запоминает лайки, которые будут впоследствии ликвидированы и скорректированы путем взаимодействия с данными сервера, табаком в корзине, баджем, профилем.
 Загрузочное окно представлено лишь элементом дизайна и будет впоследствие изменен, исходя из анализа производительности программы.
 Более детальное описание функций предсавлено перед контроллерами кодов реализаций.
 */
